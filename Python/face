import cv2

# Load the Haar cascades for face and eye detection
face_cascade = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')
eye_cascade = cv2.CascadeClassifier('haarcascade_eye_tree_eyeglasses.xml')

# Create a function to detect closed eyes
def is_eye_closed(eye):
    # Compute the aspect ratio of the eye
    aspect_ratio = eye[2] / float(eye[3])
    
    # If the aspect ratio is less than a threshold, the eye is closed
    if aspect_ratio < 0.2:
        return True
    else:
        return False

# Create a VideoCapture object to capture video from the default camera
cap = cv2.VideoCapture(0, cv2.CAP_DSHOW)

while True:
    # Read a frame from the camera
    ret, frame = cap.read()
    
    # Convert the frame to grayscale
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    
    # Detect faces in the frame
    faces = face_cascade.detectMultiScale(gray, 1.3, 5)
    
    # Loop through each face
    for (x,y,w,h) in faces:
        # Draw a rectangle around the face
        cv2.rectangle(frame,(x,y),(x+w,y+h),(255,0,0),2)
        
        # Get the region of interest (ROI) for the face
        roi_gray = gray[y:y+h, x:x+w]
        roi_color = frame[y:y+h, x:x+w]
        
        # Detect eyes in the ROI
        eyes = eye_cascade.detectMultiScale(roi_gray)
        
        # Loop through each eye
        for (ex,ey,ew,eh) in eyes:
            # Draw a rectangle around the eye
            cv2.rectangle(roi_color,(ex,ey),(ex+ew,ey+eh),(0,255,0),2)
            
            # Check if the eye is closed
            eye_roi_gray = roi_gray[ey:ey+eh, ex:ex+ew]
            if is_eye_closed((ex,ey,ew,eh)):
                cv2.putText(frame, "CLOSED", (x, y-10), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 0, 255), 2)
            else:
                cv2.putText(frame, "OPEN", (x, y-10), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 255, 0), 2)
                
    # Show the frame
    cv2.imshow('Eyes Detection',frame)
    
    # Exit if the user presses the 'q' key
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break
        
# Release the VideoCapture object and close all windows
cap.release()
cv2.destroyAllWindows()
